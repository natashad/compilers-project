 CSC488 -- WINTER 2014:
% Group 2.
% members: g0dalaln, g0faizan, g0alimuh, g0getter, g3ksingh.

=================================================
                INDEX OF TESTS
=================================================

Passing Tests:
--------------

A1a.488 - a program that uses all arithmetic, logical and comparison operators.
A1b.488 - a program using arrays including both forms of array declarations, positive and negative bounds.
A1c.488 - a program using all forms of loop building and loop exit constructs.
A1dFixed.488 - a program using non-recursive functions and procedures with and without parameters.
A1eFixed.488 - a program using recursive functions and procedures with and without parameters
             - including one nested procedure and one nested function declaration.
forwardDeclaration.488 - A test for forward declarations of procedures and integers
FunctionProcedureVariableDeclaration.488 - Test of correct syntax for: functionHead, procedureHead, variable declarations.
StatementsVsListsTest.488 - Test of using multiple statements vs a single statement in if conditions, while loops and repeat loops.
nestedFunctions.488 - Test of nesting functions inside other functions.
Variables.488 - Test of correct syntax in the declaration and use of variables.
passingAssociativity0.488 - Test to see if level 0 operators associate
passingAssociativity1.488 - Test to see if level 1 operators associate
passingAssociativity2.488 - Test to see if level 2 operators associate
passingAssociativity4.488 - Test to see if level 4 operators associate
passingAssociativity5.488 - Test to see if level 5 operators associate
passingAssociativity6.488 - Test to see if level 6 operators associate
ArithExpn - Test simple and complex arithmetic expressions (+, -, *, /)
BoolExpn - Test simple and complex boolean expressions (and, or)
CompareExprn - Test compare expressions (<, >, <=, >=)
ConditionalExpn - Test conditional expression ( if ? then : else )
EqualsExpn - Test equal expressions ( =, not = )

SuccessfulGetAndPut.488 - Test a successful use of get and put with integers, text, and newlines.
^^TODO: This doesn't work.

Failing Tests:
--------------

IncorrectVariableAssignment.488 -  Assigning to variables with incorrect value type.
^^TODO: Assigning value to array works : <--- var w[2] : integer; w:=2 ... SHOULD NOT WORK.

FunctionCallOutsideScope.488 - Calling a function declared in an ended scope.

CallingUndeclaredFunction.488 - Calling an undeclared function.
^^TODO: Should not pass!

FunctionCallBadParams.488 - Making a function call with incorrect arguments.
ProcedureIncorrectArgs.488 - Procedure call with incorrect number of arguments.
IndexingScalar.488 - Trying to subscript/index into a scalar variable as though it was an array.

ForwardDeclarationsUndefined.488 - Forward Declared Functions are not actually ever defined.
^^TODO: Should not pass.

RedeclaringVariables.488 - Declaring a variable that has already been declared.

IncompatibleReturns.488 - Returning an incompatable type from a function.
^^TODO: Should not pass.

BadArrayIndex.488 - Attempting to Index into an array using another array.
^^TODO: Should not pass.

ExitWhenNotBoolean.488 - Attempting to use an int as a condition for an exit when.
GetAndPutBoolean.488 - Attempting to get and put boolean values.


ArithExpn - Testing illegal complex and simple arithmetic expressions (+, -, *, /)
BoolExpn - Testing illegal simple and complex boolean expressions (and, or)
CompareExprn - Testing illegal compare expressions (<, >, <=, >=)
ConditionalExpn - Testing illegal conditional expression ( if ? then : else )
EqualsExpn - Test illegal equal expressions ( =, not = )
