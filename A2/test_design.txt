%TODO:
More tests for associativity, failure: e.g. but (not not) a should not. Also things a>b>c should not



% CSC488 -- WINTER 2014:
% Group 2.
% members: g0dalaln, g0faizan, g0alimuh, g0getter, g3ksingh.

=================================================
                INDEX OF TESTS
=================================================

Passing Tests:
--------------

A1a.488 - a program that uses all arithmetic, logical and comparison operators.
A1b.488 - a program using arrays including both forms of array declarations, positive and negative bounds.
A1c.488 - a program using all forms of loop building and loop exit constructs.
A1dFixed.488 - a program using non-recursive functions and procedures with and without parameters.
A1eFixed.488 - a program using recursive functions and procedures with and without parameters
             - including one nested procedure and one nested function declaration.
forwardDeclaration.488 - A test for forward declarations of procedures and integers
FunctionProcedureVariableDeclaration.488 - Test of correct syntax for: functionHead, procedureHead, variable declarations.
StatementsVsListsTest.488 - Test of using multiple statements vs a single statement in if conditions, while loops and repeat loops.
Variables.488 - Test of correct syntax in the declaration and use of variables.
passingAssociativity0.488 - Test to see if level 0 operators associate
passingAssociativity1.488 - Test to see if level 1 operators associate
passingAssociativity2.488 - Test to see if level 2 operators associate
passingAssociativity4.488 - Test to see if level 4 operators associate
passingAssociativity5.488 - Test to see if level 5 operators associate
passingAssociativity6.488 - Test to see if level 6 operators associate

Failing Tests:
--------------
A1d.488 - a program using non-recursive functions and procedures with and without parameters.
        - Fails because there are declarations but no statements in the scope.
A1e.488 - a program using recursive functions and procedures with and without parameters
        - including one nested procedure and one nested function declaration. Fails because of
        - Declarations defined after statements in scope.
FailingArgumentList.488 - Test using an incorect argument list. Arguments are given types.
FailingArrayTest.488 - Bad array declaration. Attempted 3D Declaration.
FailingArrayTest2.488 - Bad 2D array DECLARATION. Written in java format. i.e. array[a][b]
FailingArrayTest3.488 - Array Declared without a type.
FailingArrayTest4.488 - Attempt to declare an array using an expression to calculate bounds within declaration.
FailingArrayTest5.488 - Bad syntax for array with Left and Right bounds. Extra '.'
FailingArrayElementAsVariable.488 - Attempting to ACCESS a 2D array in a Java-esque way i.e. array[a][b]
FailingFunctionHead1.488 - Function declared without a return type.
FailingFunctionHead2.488 - Function parameters declared in java/c-esque way: e.g. functioname(int a)
FailingMultipleVariableDeclaration.488 - Multiple variables declared inline without being comma separated.
forwardStatementBeforeDeclaration.488 - Declarations after statements in scope.
Associativity.488 - Test for associativity a = b = c.
failingProcedureHead.488 - Test for failing procedureHeads when there is no paramater list given
failingProcedureHead2.488 - Test for failing procedureHeads when there is no scope
incorrectTypeUsage.488 - Test for incorrect types
mismatchedBrace.488 - Tests to make sure that it fails if there is a brace mismatch
====================================================
                    How We Tested
====================================================
